export function withClassMethods(methods) {
    return function (prototype, memberName) {
        methods.forEach(function (name) {
            if (name in prototype) {
                return;
            }
            prototype[name] = function () {
                var _a;
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                var result = (_a = this[memberName])[name].apply(_a, args);
                if (result === this[memberName]) {
                    return this;
                }
                else {
                    return result;
                }
            };
        });
    };
}
//# sourceMappingURL=utils.js.map