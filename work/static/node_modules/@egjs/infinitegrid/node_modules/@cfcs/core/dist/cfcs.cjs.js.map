{"version":3,"file":"cfcs.cjs.js","sources":["../src/core/utils.ts","../src/dom/utils.ts","../src/reactive/const.ts","../src/reactive/Observer.ts","../src/reactive/utils.ts","../src/reactive/Reactive.ts","../src/reactive/ReactiveSubscribe.ts","../src/reactive/inlineReactive.ts","../src/reactive/adaptReactive.ts","../src/index.umd.ts"],"sourcesContent":["/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nexport function keys<T extends Record<string, any>>(obj: T): Array<keyof T> {\n  return Object.keys(obj);\n}\n\nexport function camelize(str: string) {\n  return str.replace(/[\\s-_]([a-z])/g, (all, letter) => letter.toUpperCase());\n}\n\nexport function isString(val: any): val is string {\n  return typeof val === \"string\";\n}\n\nexport function isObject(val: any): val is object {\n  return typeof val === \"object\";\n}\n\nexport function isFunction(val: any): val is Function {\n  return typeof val === \"function\";\n}\n","import { isString, Ref } from \"../core\";\n\nexport function findTarget<Target extends Element = Element>(target: string | Target | Ref<Target> | null): Target | null {\n  let el!: Target;\n\n  if (!target) {\n    return null;\n  } if (isString(target)) {\n    el = document.querySelector<Target>(target)!;\n  } else if (target instanceof Element) {\n    el = target;\n  } else if (\"value\" in target || \"current\" in target) {\n    el = target.value! || target.current!;\n  }\n\n  return el;\n}\n\nexport function withClassMethods(methods: readonly string[]) {\n  return function (prototype: any, memberName: string) {\n    methods.forEach((name: string) => {\n      if (name in prototype) {\n        return;\n      }\n      prototype[name] = function (...args) {\n        const result = this[memberName][name](...args);\n\n        // fix `this` type to return your own `class` instance to the instance using the decorator.\n        if (result === this[memberName]) {\n          return this;\n        } else {\n          return result;\n        }\n      };\n    });\n  };\n}\n","export const OBSERVERS_PATH = \"__observers__\";\nexport const REACTIVE_PATH = \"__reactive__\";\n","import Component from \"@egjs/component\";\n\ninterface EmitterEvents<Value> {\n  update: (value: Value) => void;\n}\n\nexport class Observer<Value = any> {\n  private _current: Value;\n  private _emitter = new Component<EmitterEvents<Value>>();\n\n  constructor(value?: Value) {\n    this._current = value as any;\n  }\n  public get current() {\n    return this._current as Value;\n  }\n  public set current(value: Value) {\n    const isUpdate = value !== this._current;\n    this._current = value;\n\n    if (isUpdate) {\n      this._emitter.trigger(\"update\", value);\n    }\n  }\n  public subscribe(callback: (value: Value) => void) {\n    this._emitter.on(\"update\", callback);\n  }\n  public unsubscribe(callback?: (value: Value) => void) {\n    this._emitter.off(\"update\", callback);\n  }\n}\n","import { OBSERVERS_PATH } from \"./const\";\nimport { Observer } from \"./Observer\";\nimport { GetReactiveValue, ReactiveMethods } from \"./types\";\nimport { Ref } from \"../core\";\n\n\nexport function withReactiveMethods<\n  Instance,\n  Names extends keyof Partial<Instance>,\n  Return extends ReactiveMethods<Instance, Names>\n>(ref: Ref<Instance>, methods?: readonly Names[]): Return {\n  const obj: Record<any, any> = {};\n\n  if (!methods) {\n    return obj;\n  }\n\n  methods.forEach(name => {\n    obj[name] = function (...args: any[]) {\n      const current: any = ref.current || ref.value;\n\n      return current[name](...args);\n    };\n  });\n  return obj as Return;\n}\n\n\nexport function observe<Type>(defaultValue?: Type): Observer<Type> {\n  return new Observer<Type>(defaultValue);\n}\n\nexport function defineObservers(instance: any) {\n  const observers: Record<string, Observer<any>> = {};\n\n  Object.defineProperty(instance, OBSERVERS_PATH, {\n    get() {\n      return observers;\n    },\n  });\n\n  return observers;\n}\n\nexport function getObservers(instance: any): Record<string, Observer<any>> {\n  if (!instance[OBSERVERS_PATH]) {\n    defineObservers(instance);\n  }\n  return instance[OBSERVERS_PATH];\n}\n\nexport function getObserver(instance: any, name: string, defaultValue?: any): Observer<any> {\n  const observers = getObservers(instance);\n\n  if (!observers[name]) {\n    observers[name] = observe(defaultValue);\n  }\n  return observers[name];\n}\n\nexport function setObserver(instance: any, name: string, observer: Observer<any>) {\n  const observers = getObservers(instance);\n\n  observers[name] = observer;\n}\n\nexport function isObserver(val: any): val is Observer {\n  return val && (\"current\" in val && \"subscribe\" in val && \"unsubscribe\" in val);\n}\n","import { getObserver } from \"./utils\";\n\nexport function Reactive(name?: string) {\n  return function (prototype: any, memberName: string) {\n    const publicName = name || memberName;\n\n    Object.defineProperty(prototype, memberName, {\n      get: function () {\n        return getObserver(this, publicName).current;\n      },\n      set: function (value: any) {\n        getObserver(this, publicName, value).current = value;\n      },\n    });\n    if (publicName !== memberName) {\n      Object.defineProperty(prototype, publicName, {\n        get: function () {\n          return getObserver(this, publicName).current;\n        },\n      });\n    }\n  };\n}\n\n","import { keys } from \"../core\";\nimport { getObserver, getObservers } from \"./utils\";\n\nexport function injectReactiveSubscribe(object: Record<string, any>,) {\n  object[\"subscribe\"] = function (name: string, callback: (value: any) => void) {\n    getObserver(this, name).subscribe(callback);\n  };\n  object[\"unsubscribe\"] = function (name?: string, callback?: (value: any) => void) {\n    if (!name) {\n      keys(getObservers(this)).forEach((observerName) => {\n        this.unsubscribe(observerName);\n      });\n      return;\n    }\n    if (!(name in this)) {\n      return;\n    }\n    getObserver(this, name).unsubscribe(callback);\n  };\n}\n\nexport function ReactiveSubscribe(Constructor: any) {\n  const prototype = Constructor.prototype;\n\n  injectReactiveSubscribe(prototype);\n}\n\nexport interface ReactiveSubscribe<State extends Record<string, any>> {\n  subscribe<Name extends keyof State = keyof State>(\n    name: Name, callback: (value: State[Name]) => void): void;\n  unsubscribe<Name extends keyof State = keyof State>(\n    name?: Name, callback?: (value: State[Name]) => void): void;\n}\n","import { ExtractNever, isFunction, keys } from \"../core\";\nimport { OBSERVERS_PATH } from \"./const\";\nimport { Observer } from \"./Observer\";\nimport { Reactive } from \"./Reactive\";\nimport { injectReactiveSubscribe, ReactiveSubscribe } from \"./ReactiveSubscribe\";\nimport { defineObservers, isObserver, setObserver } from \"./utils\";\n\n\ntype ConvertValue<Object extends Record<string, any>> = {\n  [Key in keyof Object]: Object[Key] extends Observer<infer Type> ? Type : Object[Key];\n}\n\ntype PickObverser<Object extends Record<string, any>> = ExtractNever<{\n  [Key in keyof Object]: Object[Key] extends Observer<infer Type> ? Type : never;\n}>;\n\nexport type ReactiveObject<Object extends Record<string, any>>\n  = ConvertValue<Object> & ReactiveSubscribe<PickObverser<Object>>;\n\n\nexport function reactive<Object extends Record<string, any>>(\n  setup: Readonly<Object> | (() => Readonly<Object>),\n): ReactiveObject<Object> {\n  const result = isFunction(setup) ? setup() : setup;\n  const reactiveObject: Record<string, any> = {};\n\n  defineObservers(reactiveObject);\n  keys(result).forEach((name: any) => {\n    const value = result[name];\n    if (isObserver(value)) {\n      setObserver(reactiveObject, name, value);\n      Reactive(name)(reactiveObject, name);\n    } else {\n      reactiveObject[name] = value;\n    }\n  });\n\n  injectReactiveSubscribe(reactiveObject);\n  return reactiveObject as ReactiveObject<Object>;\n}\n","import { keys } from \"src/core\";\nimport { Ref } from \"src/core/types\";\nimport { ReactiveAdapter } from \"./ReactiveAdapter\";\nimport { ReactiveSubscribe } from \"./ReactiveSubscribe\";\nimport { ReactiveEventCallback } from \"./types\";\nimport { getObservers, withReactiveMethods } from \"./utils\";\n\nexport function adaptReactive<\n  Instance extends ReactiveSubscribe<Record<string, any>>,\n  State extends Record<string, any> = {},\n  Methods extends keyof Partial<Instance> = any,\n  Data = any,\n  Events extends Record<string, any> = {},\n  >(adapter: ReactiveAdapter<Instance, State, Methods, Data, Events>) {\n\n  function data(): Data {\n    return adapter.data?.() ?? {} as Data;\n  }\n\n  const instanceRef: Ref<Instance> = { current: adapter.created?.(data()) || null };\n  let firstState: State | null = null;\n\n  return {\n    state(): State {\n      const inst = instanceRef.current;\n\n      if (firstState) {\n        return firstState;\n      }\n      if (adapter.state) {\n        firstState = adapter.state;\n      } else if (inst) {\n        const observers = getObservers(inst);\n\n        firstState = keys(observers).reduce((prev, cur) => {\n          prev[cur] = observers[cur].current;\n          return prev;\n        }, {} as any);\n      }\n      return firstState || {} as State;\n    },\n    instance() {\n      return instanceRef.current;\n    },\n    mounted(): void {\n      instanceRef.current = adapter.mounted?.(data()) || instanceRef.current;\n    },\n    init(): void {\n      adapter.init?.(instanceRef.current!, data());\n    },\n    destroy(): void {\n      adapter.destroy?.(instanceRef.current!, data());\n    },\n    methods() {\n      return withReactiveMethods<any, any, any>(instanceRef, adapter.methods);\n    },\n    on(eventName: string, listener: ReactiveEventCallback<any, any>) {\n      adapter.on?.(instanceRef.current!, eventName as never, listener);\n    },\n    off(eventName: string, listener: ReactiveEventCallback<any, any>) {\n      adapter.off?.(instanceRef.current!, eventName as never, listener);\n    },\n  };\n}\n","/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport * as modules from \"./index\";\n\n// co\n// for (const name in modules) {\n//     (cfcs as any)[name] = (modules as any)[name];\n// }\n\nexport default modules;\n"],"names":["keys","obj","Object","camelize","str","replace","all","letter","toUpperCase","isString","val","isObject","isFunction","findTarget","target","el","document","querySelector","Element","value","current","withClassMethods","methods","prototype","memberName","forEach","name","args","_i","arguments","length","result","_a","apply","OBSERVERS_PATH","Observer","_emitter","Component","_current","defineProperty","get","set","isUpdate","trigger","subscribe","callback","on","unsubscribe","off","withReactiveMethods","ref","observe","defaultValue","defineObservers","instance","observers","getObservers","getObserver","setObserver","observer","isObserver","Reactive","publicName","injectReactiveSubscribe","object","_this","observerName","ReactiveSubscribe","Constructor","reactive","setup","reactiveObject","adaptReactive","adapter","data","_b","call","instanceRef","created","firstState","state","inst","observers_1","reduce","prev","cur","mounted","init","destroy","eventName","listener"],"mappings":"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"}