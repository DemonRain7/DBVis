export declare function injectReactiveSubscribe(object: Record<string, any>): void;
export declare function ReactiveSubscribe(Constructor: any): void;
export interface ReactiveSubscribe<State extends Record<string, any>> {
    subscribe<Name extends keyof State = keyof State>(name: Name, callback: (value: State[Name]) => void): void;
    unsubscribe<Name extends keyof State = keyof State>(name?: Name, callback?: (value: State[Name]) => void): void;
}
