{"version":3,"file":"cfcs.min.js","sources":["../src/core/utils.ts","../src/reactive/const.ts","../src/reactive/Observer.ts","../src/reactive/utils.ts","../src/reactive/Reactive.ts","../src/reactive/ReactiveSubscribe.ts","../src/dom/utils.ts","../src/reactive/inlineReactive.ts","../src/reactive/adaptReactive.ts"],"sourcesContent":["/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nexport function keys<T extends Record<string, any>>(obj: T): Array<keyof T> {\n  return Object.keys(obj);\n}\n\nexport function camelize(str: string) {\n  return str.replace(/[\\s-_]([a-z])/g, (all, letter) => letter.toUpperCase());\n}\n\nexport function isString(val: any): val is string {\n  return typeof val === \"string\";\n}\n\nexport function isObject(val: any): val is object {\n  return typeof val === \"object\";\n}\n\nexport function isFunction(val: any): val is Function {\n  return typeof val === \"function\";\n}\n","export const OBSERVERS_PATH = \"__observers__\";\nexport const REACTIVE_PATH = \"__reactive__\";\n","import Component from \"@egjs/component\";\n\ninterface EmitterEvents<Value> {\n  update: (value: Value) => void;\n}\n\nexport class Observer<Value = any> {\n  private _current: Value;\n  private _emitter = new Component<EmitterEvents<Value>>();\n\n  constructor(value?: Value) {\n    this._current = value as any;\n  }\n  public get current() {\n    return this._current as Value;\n  }\n  public set current(value: Value) {\n    const isUpdate = value !== this._current;\n    this._current = value;\n\n    if (isUpdate) {\n      this._emitter.trigger(\"update\", value);\n    }\n  }\n  public subscribe(callback: (value: Value) => void) {\n    this._emitter.on(\"update\", callback);\n  }\n  public unsubscribe(callback?: (value: Value) => void) {\n    this._emitter.off(\"update\", callback);\n  }\n}\n","import { OBSERVERS_PATH } from \"./const\";\nimport { Observer } from \"./Observer\";\nimport { GetReactiveValue, ReactiveMethods } from \"./types\";\nimport { Ref } from \"../core\";\n\n\nexport function withReactiveMethods<\n  Instance,\n  Names extends keyof Partial<Instance>,\n  Return extends ReactiveMethods<Instance, Names>\n>(ref: Ref<Instance>, methods?: readonly Names[]): Return {\n  const obj: Record<any, any> = {};\n\n  if (!methods) {\n    return obj;\n  }\n\n  methods.forEach(name => {\n    obj[name] = function (...args: any[]) {\n      const current: any = ref.current || ref.value;\n\n      return current[name](...args);\n    };\n  });\n  return obj as Return;\n}\n\n\nexport function observe<Type>(defaultValue?: Type): Observer<Type> {\n  return new Observer<Type>(defaultValue);\n}\n\nexport function defineObservers(instance: any) {\n  const observers: Record<string, Observer<any>> = {};\n\n  Object.defineProperty(instance, OBSERVERS_PATH, {\n    get() {\n      return observers;\n    },\n  });\n\n  return observers;\n}\n\nexport function getObservers(instance: any): Record<string, Observer<any>> {\n  if (!instance[OBSERVERS_PATH]) {\n    defineObservers(instance);\n  }\n  return instance[OBSERVERS_PATH];\n}\n\nexport function getObserver(instance: any, name: string, defaultValue?: any): Observer<any> {\n  const observers = getObservers(instance);\n\n  if (!observers[name]) {\n    observers[name] = observe(defaultValue);\n  }\n  return observers[name];\n}\n\nexport function setObserver(instance: any, name: string, observer: Observer<any>) {\n  const observers = getObservers(instance);\n\n  observers[name] = observer;\n}\n\nexport function isObserver(val: any): val is Observer {\n  return val && (\"current\" in val && \"subscribe\" in val && \"unsubscribe\" in val);\n}\n","import { getObserver } from \"./utils\";\n\nexport function Reactive(name?: string) {\n  return function (prototype: any, memberName: string) {\n    const publicName = name || memberName;\n\n    Object.defineProperty(prototype, memberName, {\n      get: function () {\n        return getObserver(this, publicName).current;\n      },\n      set: function (value: any) {\n        getObserver(this, publicName, value).current = value;\n      },\n    });\n    if (publicName !== memberName) {\n      Object.defineProperty(prototype, publicName, {\n        get: function () {\n          return getObserver(this, publicName).current;\n        },\n      });\n    }\n  };\n}\n\n","import { keys } from \"../core\";\nimport { getObserver, getObservers } from \"./utils\";\n\nexport function injectReactiveSubscribe(object: Record<string, any>,) {\n  object[\"subscribe\"] = function (name: string, callback: (value: any) => void) {\n    getObserver(this, name).subscribe(callback);\n  };\n  object[\"unsubscribe\"] = function (name?: string, callback?: (value: any) => void) {\n    if (!name) {\n      keys(getObservers(this)).forEach((observerName) => {\n        this.unsubscribe(observerName);\n      });\n      return;\n    }\n    if (!(name in this)) {\n      return;\n    }\n    getObserver(this, name).unsubscribe(callback);\n  };\n}\n\nexport function ReactiveSubscribe(Constructor: any) {\n  const prototype = Constructor.prototype;\n\n  injectReactiveSubscribe(prototype);\n}\n\nexport interface ReactiveSubscribe<State extends Record<string, any>> {\n  subscribe<Name extends keyof State = keyof State>(\n    name: Name, callback: (value: State[Name]) => void): void;\n  unsubscribe<Name extends keyof State = keyof State>(\n    name?: Name, callback?: (value: State[Name]) => void): void;\n}\n","import { isString, Ref } from \"../core\";\n\nexport function findTarget<Target extends Element = Element>(target: string | Target | Ref<Target> | null): Target | null {\n  let el!: Target;\n\n  if (!target) {\n    return null;\n  } if (isString(target)) {\n    el = document.querySelector<Target>(target)!;\n  } else if (target instanceof Element) {\n    el = target;\n  } else if (\"value\" in target || \"current\" in target) {\n    el = target.value! || target.current!;\n  }\n\n  return el;\n}\n\nexport function withClassMethods(methods: readonly string[]) {\n  return function (prototype: any, memberName: string) {\n    methods.forEach((name: string) => {\n      if (name in prototype) {\n        return;\n      }\n      prototype[name] = function (...args) {\n        const result = this[memberName][name](...args);\n\n        // fix `this` type to return your own `class` instance to the instance using the decorator.\n        if (result === this[memberName]) {\n          return this;\n        } else {\n          return result;\n        }\n      };\n    });\n  };\n}\n","import { ExtractNever, isFunction, keys } from \"../core\";\nimport { OBSERVERS_PATH } from \"./const\";\nimport { Observer } from \"./Observer\";\nimport { Reactive } from \"./Reactive\";\nimport { injectReactiveSubscribe, ReactiveSubscribe } from \"./ReactiveSubscribe\";\nimport { defineObservers, isObserver, setObserver } from \"./utils\";\n\n\ntype ConvertValue<Object extends Record<string, any>> = {\n  [Key in keyof Object]: Object[Key] extends Observer<infer Type> ? Type : Object[Key];\n}\n\ntype PickObverser<Object extends Record<string, any>> = ExtractNever<{\n  [Key in keyof Object]: Object[Key] extends Observer<infer Type> ? Type : never;\n}>;\n\nexport type ReactiveObject<Object extends Record<string, any>>\n  = ConvertValue<Object> & ReactiveSubscribe<PickObverser<Object>>;\n\n\nexport function reactive<Object extends Record<string, any>>(\n  setup: Readonly<Object> | (() => Readonly<Object>),\n): ReactiveObject<Object> {\n  const result = isFunction(setup) ? setup() : setup;\n  const reactiveObject: Record<string, any> = {};\n\n  defineObservers(reactiveObject);\n  keys(result).forEach((name: any) => {\n    const value = result[name];\n    if (isObserver(value)) {\n      setObserver(reactiveObject, name, value);\n      Reactive(name)(reactiveObject, name);\n    } else {\n      reactiveObject[name] = value;\n    }\n  });\n\n  injectReactiveSubscribe(reactiveObject);\n  return reactiveObject as ReactiveObject<Object>;\n}\n","import { keys } from \"src/core\";\nimport { Ref } from \"src/core/types\";\nimport { ReactiveAdapter } from \"./ReactiveAdapter\";\nimport { ReactiveSubscribe } from \"./ReactiveSubscribe\";\nimport { ReactiveEventCallback } from \"./types\";\nimport { getObservers, withReactiveMethods } from \"./utils\";\n\nexport function adaptReactive<\n  Instance extends ReactiveSubscribe<Record<string, any>>,\n  State extends Record<string, any> = {},\n  Methods extends keyof Partial<Instance> = any,\n  Data = any,\n  Events extends Record<string, any> = {},\n  >(adapter: ReactiveAdapter<Instance, State, Methods, Data, Events>) {\n\n  function data(): Data {\n    return adapter.data?.() ?? {} as Data;\n  }\n\n  const instanceRef: Ref<Instance> = { current: adapter.created?.(data()) || null };\n  let firstState: State | null = null;\n\n  return {\n    state(): State {\n      const inst = instanceRef.current;\n\n      if (firstState) {\n        return firstState;\n      }\n      if (adapter.state) {\n        firstState = adapter.state;\n      } else if (inst) {\n        const observers = getObservers(inst);\n\n        firstState = keys(observers).reduce((prev, cur) => {\n          prev[cur] = observers[cur].current;\n          return prev;\n        }, {} as any);\n      }\n      return firstState || {} as State;\n    },\n    instance() {\n      return instanceRef.current;\n    },\n    mounted(): void {\n      instanceRef.current = adapter.mounted?.(data()) || instanceRef.current;\n    },\n    init(): void {\n      adapter.init?.(instanceRef.current!, data());\n    },\n    destroy(): void {\n      adapter.destroy?.(instanceRef.current!, data());\n    },\n    methods() {\n      return withReactiveMethods<any, any, any>(instanceRef, adapter.methods);\n    },\n    on(eventName: string, listener: ReactiveEventCallback<any, any>) {\n      adapter.on?.(instanceRef.current!, eventName as never, listener);\n    },\n    off(eventName: string, listener: ReactiveEventCallback<any, any>) {\n      adapter.off?.(instanceRef.current!, eventName as never, listener);\n    },\n  };\n}\n"],"names":["keys","obj","Object","isString","val","isFunction","OBSERVERS_PATH","Observer","value","this","_emitter","Component","_current","__proto","prototype","defineProperty","get","set","isUpdate","trigger","subscribe","callback","on","unsubscribe","off","withReactiveMethods","ref","methods","forEach","name","args","_i","arguments","length","current","observe","defaultValue","defineObservers","instance","observers","getObservers","getObserver","setObserver","observer","isObserver","Reactive","memberName","publicName","injectReactiveSubscribe","object","_this","observerName","str","replace","all","letter","toUpperCase","target","el","document","querySelector","Element","result","_a","apply","setup","reactiveObject","Constructor","adapter","data","_b","call","instanceRef","created","firstState","state","observers_1","inst","reduce","prev","cur","mounted","init","destroy","eventName","listener"],"mappings":"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"}