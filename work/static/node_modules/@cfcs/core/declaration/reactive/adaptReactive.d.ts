import { ReactiveAdapter } from "./ReactiveAdapter";
import { ReactiveSubscribe } from "./ReactiveSubscribe";
import { ReactiveEventCallback } from "./types";
export declare function adaptReactive<Instance extends ReactiveSubscribe<Record<string, any>>, State extends Record<string, any> = {}, Methods extends keyof Partial<Instance> = any, Data = any, Events extends Record<string, any> = {}>(adapter: ReactiveAdapter<Instance, State, Methods, Data, Events>): {
    state(): State;
    instance(): Instance;
    mounted(): void;
    init(): void;
    destroy(): void;
    methods(): any;
    on(eventName: string, listener: ReactiveEventCallback<any, any>): void;
    off(eventName: string, listener: ReactiveEventCallback<any, any>): void;
};
