{"version":3,"file":"cfcs.cjs.js","sources":["../src/core/utils.ts","../src/dom/utils.ts","../src/reactive/const.ts","../src/reactive/Observer.ts","../src/reactive/utils.ts","../src/reactive/Reactive.ts","../src/reactive/ReactiveSubscribe.ts","../src/reactive/inlineReactive.ts","../src/reactive/adaptReactive.ts","../src/index.umd.ts"],"sourcesContent":["/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nexport function keys<T extends Record<string, any>>(obj: T): Array<keyof T> {\n  return Object.keys(obj);\n}\n\nexport function camelize(str: string) {\n  return str.replace(/[\\s-_]([a-z])/g, (all, letter) => letter.toUpperCase());\n}\n\nexport function isObject(val: any): val is object {\n  return typeof val === \"object\";\n}\nexport function isFunction(val: any): val is Function {\n  return typeof val === \"function\";\n}","\nexport function withClassMethods(methods: readonly string[]) {\n  return function (prototype: any, memberName: string) {\n    methods.forEach((name: string) => {\n      if (name in prototype) {\n        return;\n      }\n      prototype[name] = function (...args) {\n        const result = this[memberName][name](...args);\n\n        // fix `this` type to return your own `class` instance to the instance using the decorator.\n        if (result === this[memberName]) {\n          return this;\n        } else {\n          return result;\n        }\n      };\n    });\n  };\n}\n","export const OBSERVERS_PATH = \"__observers__\";\nexport const REACTIVE_PATH = \"__reactive__\";\n","import Component from \"@egjs/component\";\n\ninterface EmitterEvents<Value> {\n  update: (value: Value) => void;\n}\n\nexport class Observer<Value = any> {\n  private _current: Value;\n  private _emitter = new Component<EmitterEvents<Value>>();\n\n  constructor(value?: Value) {\n    this._current = value as any;\n  }\n  public get current() {\n    return this._current as Value;\n  }\n  public set current(value: Value) {\n    const isUpdate = value !== this._current;\n    this._current = value;\n\n    if (isUpdate) {\n      this._emitter.trigger(\"update\", value);\n    }\n  }\n  public subscribe(callback: (value: Value) => void) {\n    this._emitter.on(\"update\", callback);\n  }\n  public unsubscribe(callback?: (value: Value) => void) {\n    this._emitter.off(\"update\", callback);\n  }\n}\n","import { OBSERVERS_PATH } from \"./const\";\nimport { Observer } from \"./Observer\";\nimport { ReactiveMethods } from \"./types\";\nimport { Ref } from \"../core\";\n\n\nexport function withReactiveMethods<\n  Instance,\n  Names extends keyof Partial<Instance>,\n  Return extends ReactiveMethods<Instance, Names>\n>(ref: Ref<Instance>, methods?: readonly Names[]): Return {\n  const obj: Record<any, any> = {};\n\n  if (!methods) {\n    return obj;\n  }\n\n  methods.forEach(name => {\n    obj[name] = function (...args: any[]) {\n      const current: any = ref.current || ref.value;\n\n      return current[name](...args);\n    };\n  });\n  return obj as Return;\n}\n\n\nexport function observe<Type>(defaultValue?: Type): Observer<Type> {\n  return new Observer<Type>(defaultValue);\n}\n\nexport function getObservers(instance: any): Record<string, Observer<any>> {\n  if (!instance[OBSERVERS_PATH]) {\n    instance[OBSERVERS_PATH] = {};\n  }\n  return instance[OBSERVERS_PATH];\n}\n\nexport function getObserver(instance: any, name: string, defaultValue?: any): Observer<any> {\n  const observers = getObservers(instance);\n\n  if (!observers[name]) {\n    observers[name] = observe(defaultValue);\n  }\n  return observers[name];\n}\n\nexport function setObserver(instance: any, name: string, observer: Observer<any>) {\n  const observers = getObservers(instance);\n\n  observers[name] = observer;\n}\n\nexport function isObserver(val: any): val is Observer {\n  return val && (\"current\" in val && \"subscribe\" in val && \"unsubscribe\" in val);\n}","import { getObserver } from \"./utils\";\n\nexport function Reactive(name?: string) {\n    return function (prototype: any, memberName: string) {\n        const publicName = name || memberName;\n\n        Object.defineProperty(prototype, memberName, {\n            get: function () {\n                return getObserver(this, publicName).current;\n            },\n            set: function (value: any) {\n                getObserver(this, publicName, value).current = value;\n            },\n        });\n        if (publicName !== memberName) {\n            Object.defineProperty(prototype, publicName, {\n                get: function () {\n                    return getObserver(this, publicName).current;\n                },\n            });\n        }\n    };\n}\n\n","import { keys } from \"../core\";\nimport { getObserver, getObservers } from \"./utils\";\n\nexport function injectReactiveSubscribe(object: Record<string, any>, ) {\n    object[\"subscribe\"] = function (name: string, callback: (value: any) => void) {\n        getObserver(this, name).subscribe(callback);\n    };\n    object[\"unsubscribe\"] = function (name?: string, callback?: (value: any) => void) {\n        if (!name) {\n            keys(getObservers(this)).forEach((observerName) => {\n                this.unsubscribe(observerName);\n            });\n            return;\n        }\n        if (!(name in this)) {\n            return;\n        }\n        getObserver(this, name).unsubscribe(callback);\n    };\n}\n\nexport function ReactiveSubscribe(Constructor: any) {\n    const prototype = Constructor.prototype;\n\n    injectReactiveSubscribe(prototype);\n}\n\nexport interface ReactiveSubscribe<Properties extends Record<string, any>> {\n    subscribe<Name extends keyof Properties = keyof Properties>(\n        name: Name, callback: (value: Properties[Name]) => void): void;\n    unsubscribe<Name extends keyof Properties = keyof Properties>(\n        name?: Name, callback?: (value: Properties[Name]) => void): void;\n}","import { ExtractNever, isFunction, keys } from \"../core\";\nimport { Observer } from \"./Observer\";\nimport { Reactive } from \"./Reactive\";\nimport { injectReactiveSubscribe, ReactiveSubscribe } from \"./ReactiveSubscribe\";\nimport { isObserver, setObserver } from \"./utils\";\n\n\ntype ConvertValue<Object extends Record<string, any>> = {\n    [Key in keyof Object]: Object[Key] extends Observer<infer Type> ? Type : Object[Key];\n}\n\ntype PickObverser<Object extends Record<string, any>> = ExtractNever<{\n    [Key in keyof Object]: Object[Key] extends Observer<infer Type> ? Type : never;\n}>;\n\nexport type ReactiveObject<Object extends Record<string, any>>\n    = ConvertValue<Object> & ReactiveSubscribe<PickObverser<Object>>;\n\nexport function reactive<Object extends Record<string, any>>(\n    setup: Readonly<Object> | (() => Readonly<Object>),\n): ReactiveObject<Object> {\n    const result = isFunction(setup) ? setup() : setup;\n    const reactiveObject: Record<string, any> = {};\n\n    keys(result).forEach((name: any) => {\n        const value = result[name];\n        if (isObserver(value)) {\n            setObserver(reactiveObject, name, value);\n            Reactive(name)(reactiveObject, name);\n        } else {\n            reactiveObject[name] = value;\n        }\n    });\n\n    injectReactiveSubscribe(reactiveObject);\n    return reactiveObject as ReactiveObject<Object>;\n}\n","import { keys } from \"src/core\";\nimport { Ref } from \"src/core/types\";\nimport { ReactiveAdapter } from \"./ReactiveAdapter\";\nimport { ReactiveSubscribe } from \"./ReactiveSubscribe\";\nimport { ReactiveEventCallback } from \"./types\";\nimport { getObservers, withReactiveMethods } from \"./utils\";\n\nexport function adaptReactive<\n    Instance extends ReactiveSubscribe<Record<string, any>>,\n    State extends Record<string, any> = {},\n    Methods extends keyof Partial<Instance> = any,\n    Data = any,\n    Events extends Record<string, any> = {},\n    >(adapter: ReactiveAdapter<Instance, State, Methods, Data, Events>) {\n\n    function data(): Data {\n        return adapter.data?.() ?? {} as Data;\n    }\n\n    const instanceRef: Ref<Instance> = { current: adapter.created?.(data()) || null };\n    let firstState: State | null = null;\n    \n    return {\n        state(): State {\n            const inst = instanceRef.current;\n\n            if (firstState) {\n                return firstState;\n            }\n            if (adapter.state) {\n                firstState = adapter.state;\n            } else if (inst) {\n                const observers = getObservers(inst);\n\n                firstState = keys(observers).reduce((prev, cur) => {\n                    prev[cur] = observers[cur].current;\n                    return prev;\n                }, {} as any);\n            }\n            return firstState || {} as State;\n        },\n        instance() {\n            return instanceRef.current;\n        },\n        mounted(): void {\n            instanceRef.current = adapter.mounted?.(data()) || instanceRef.current;\n        },\n        init(): void {\n            adapter.init?.(instanceRef.current!, data());\n        },\n        destroy(): void {\n            adapter.destroy?.(instanceRef.current!, data());\n        },\n        methods() {\n            return withReactiveMethods<any, any, any>(instanceRef, adapter.methods);\n        },\n        on(eventName: string, listener: ReactiveEventCallback<any, any>) {\n            adapter.on?.(instanceRef.current!, eventName as never, listener);\n        },\n        off(eventName: string, listener: ReactiveEventCallback<any, any>) {\n            adapter.off?.(instanceRef.current!, eventName as never, listener);\n        },\n    };\n}","/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport * as modules from \"./index\";\n\n// co\n// for (const name in modules) {\n//     (cfcs as any)[name] = (modules as any)[name];\n// }\n\nexport default modules;\n"],"names":["keys","obj","Object","camelize","str","replace","all","letter","toUpperCase","isObject","val","isFunction","withClassMethods","methods","prototype","memberName","forEach","name","args","_i","arguments","length","result","_a","apply","OBSERVERS_PATH","Observer","value","_emitter","Component","_current","defineProperty","get","set","isUpdate","trigger","subscribe","callback","on","unsubscribe","off","withReactiveMethods","ref","current","observe","defaultValue","getObservers","instance","getObserver","observers","setObserver","observer","isObserver","Reactive","publicName","injectReactiveSubscribe","object","_this","observerName","ReactiveSubscribe","Constructor","reactive","setup","reactiveObject","adaptReactive","adapter","data","_b","call","instanceRef","created","firstState","state","inst","observers_1","reduce","prev","cur","mounted","init","destroy","eventName","listener"],"mappings":";;;;;;;;;;;;AAAA;;;;AAIG;AACG,SAAUA,IAAV,CAA8CC,GAA9C,EAAoD;AACxD,EAAA,OAAOC,MAAM,CAACF,IAAP,CAAYC,GAAZ,CAAP,CAAA;AACD,CAAA;AAEK,SAAUE,QAAV,CAAmBC,GAAnB,EAA8B;EAClC,OAAOA,GAAG,CAACC,OAAJ,CAAY,gBAAZ,EAA8B,UAACC,GAAD,EAAMC,MAAN,EAAiB;IAAA,OAAAA,MAAM,CAACC,WAAP,EAAA,CAAA;AAAoB,GAAnE,CAAP,CAAA;AACD,CAAA;AAEK,SAAUC,QAAV,CAAmBC,GAAnB,EAA2B;EAC/B,OAAO,OAAOA,GAAP,KAAe,QAAtB,CAAA;AACD,CAAA;AACK,SAAUC,UAAV,CAAqBD,GAArB,EAA6B;EACjC,OAAO,OAAOA,GAAP,KAAe,UAAtB,CAAA;AACD;;ACjBK,SAAUE,gBAAV,CAA2BC,OAA3B,EAAqD;AACzD,EAAA,OAAO,UAAUC,SAAV,EAA0BC,UAA1B,EAA4C;AACjDF,IAAAA,OAAO,CAACG,OAAR,CAAgB,UAACC,IAAD,EAAa;MAC3B,IAAIA,IAAI,IAAIH,SAAZ,EAAuB;AACrB,QAAA,OAAA;AACD,OAAA;;AACDA,MAAAA,SAAS,CAACG,IAAD,CAAT,GAAkB,YAAA;;;QAAU,IAAOC,IAAA,GAAA,EAAP,CAAA;;aAAA,IAAOC,EAAA,GAAA,GAAPA,EAAO,GAAAC,SAAA,CAAAC,QAAPF,EAAO,IAAA;AAAPD,UAAAA,IAAO,CAAAC,EAAA,CAAP,GAAOC,SAAA,CAAAD,EAAA,CAAP,CAAA;;;AAC1B,QAAA,IAAMG,MAAM,GAAG,CAAAC,EAAA,GAAA,IAAA,CAAKR,UAAL,CAAA,EAAiBE,IAAjB,CAAA,CAA0BO,KAA1B,CAA0BD,EAA1B,EAA0BL,IAA1B,CAAf,CADgB;;;AAIhB,QAAA,IAAII,MAAM,KAAK,IAAKP,CAAAA,UAAL,CAAf,EAAiC;AAC/B,UAAA,OAAO,IAAP,CAAA;AACD,SAFD,MAEO;AACL,UAAA,OAAOO,MAAP,CAAA;AACD,SAAA;OARH,CAAA;KAJF,CAAA,CAAA;GADF,CAAA;AAiBD;;ACnBM,IAAMG,cAAc,GAAG,eAAvB;;ACMP,IAAAC,QAAA;AAAA;AAAA,YAAA;EAIE,SAAAA,QAAA,CAAYC,KAAZ,EAAyB;AAFjB,IAAA,IAAA,CAAAC,QAAA,GAAW,IAAIC,SAAJ,EAAX,CAAA;IAGN,IAAKC,CAAAA,QAAL,GAAgBH,KAAhB,CAAA;AACD,GAAA;;AANH,EAAA,IAAA,OAAA,GAAA,QAAA,CAAA,SAAA,CAAA;AAOEzB,EAAAA,MAAA,CAAA6B,cAAA,CAAkB,OAAA,EAAA,SAAlB,EAAkB;AAAlBC,IAAAA,GAAA,EAAA,YAAA;AACE,MAAA,OAAO,KAAKF,QAAZ,CAAA;KADgB;IAGlBG,GAAA,EAAA,UAAmBN,KAAnB,EAA+B;AAC7B,MAAA,IAAMO,QAAQ,GAAGP,KAAK,KAAK,KAAKG,QAAhC,CAAA;MACA,IAAKA,CAAAA,QAAL,GAAgBH,KAAhB,CAAA;;AAEA,MAAA,IAAIO,QAAJ,EAAc;AACZ,QAAA,IAAA,CAAKN,QAAL,CAAcO,OAAd,CAAsB,QAAtB,EAAgCR,KAAhC,CAAA,CAAA;AACD,OAAA;KATe;qBAAA;;GAAlB,CAAA,CAAA;;AAWO,EAAA,OAAA,CAASS,SAAT,GAAP,UAAiBC,QAAjB,EAAiD;AAC/C,IAAA,IAAA,CAAKT,QAAL,CAAcU,EAAd,CAAiB,QAAjB,EAA2BD,QAA3B,CAAA,CAAA;GADK,CAAA;;AAGA,EAAA,OAAA,CAAWE,WAAX,GAAP,UAAmBF,QAAnB,EAAoD;AAClD,IAAA,IAAA,CAAKT,QAAL,CAAcY,GAAd,CAAkB,QAAlB,EAA4BH,QAA5B,CAAA,CAAA;GADK,CAAA;;AAGT,EAAA,OAACX,QAAD,CAAA;AAAC,CAxBD,EAAA;;ACAgB,SAAAe,mBAAA,CAIdC,GAJc,EAIM7B,OAJN,EAIgC;EAC9C,IAAMZ,GAAG,GAAqB,EAA9B,CAAA;;EAEA,IAAI,CAACY,OAAL,EAAc;AACZ,IAAA,OAAOZ,GAAP,CAAA;AACD,GAAA;;AAEDY,EAAAA,OAAO,CAACG,OAAR,CAAgB,UAAAC,IAAA,EAAI;AAClBhB,IAAAA,GAAG,CAACgB,IAAD,CAAH,GAAY,YAAA;MAAU,IAAcC,IAAA,GAAA,EAAd,CAAA;;WAAA,IAAcC,EAAA,GAAA,GAAdA,EAAc,GAAAC,SAAA,CAAAC,QAAdF,EAAc,IAAA;AAAdD,QAAAA,IAAc,CAAAC,EAAA,CAAd,GAAcC,SAAA,CAAAD,EAAA,CAAd,CAAA;;;MACpB,IAAMwB,OAAO,GAAQD,GAAG,CAACC,OAAJ,IAAeD,GAAG,CAACf,KAAxC,CAAA;MAEA,OAAOgB,OAAO,CAAC1B,IAAD,CAAP,MAAA,CAAA0B,OAAA,EAAiBzB,IAAjB,CAAP,CAAA;KAHF,CAAA;GADF,CAAA,CAAA;AAOA,EAAA,OAAOjB,GAAP,CAAA;AACD,CAAA;AAGK,SAAU2C,OAAV,CAAwBC,YAAxB,EAA2C;AAC/C,EAAA,OAAO,IAAInB,QAAJ,CAAmBmB,YAAnB,CAAP,CAAA;AACD,CAAA;AAEK,SAAUC,YAAV,CAAuBC,QAAvB,EAAoC;AACxC,EAAA,IAAI,CAACA,QAAQ,CAACtB,cAAD,CAAb,EAA+B;AAC7BsB,IAAAA,QAAQ,CAACtB,cAAD,CAAR,GAA2B,EAA3B,CAAA;AACD,GAAA;;EACD,OAAOsB,QAAQ,CAACtB,cAAD,CAAf,CAAA;AACD,CAAA;SAEeuB,YAAYD,UAAe9B,MAAc4B,cAAkB;AACzE,EAAA,IAAMI,SAAS,GAAGH,YAAY,CAACC,QAAD,CAA9B,CAAA;;AAEA,EAAA,IAAI,CAACE,SAAS,CAAChC,IAAD,CAAd,EAAsB;AACpBgC,IAAAA,SAAS,CAAChC,IAAD,CAAT,GAAkB2B,OAAO,CAACC,YAAD,CAAzB,CAAA;AACD,GAAA;;EACD,OAAOI,SAAS,CAAChC,IAAD,CAAhB,CAAA;AACD,CAAA;SAEeiC,YAAYH,UAAe9B,MAAckC,UAAuB;AAC9E,EAAA,IAAMF,SAAS,GAAGH,YAAY,CAACC,QAAD,CAA9B,CAAA;AAEAE,EAAAA,SAAS,CAAChC,IAAD,CAAT,GAAkBkC,QAAlB,CAAA;AACD,CAAA;AAEK,SAAUC,UAAV,CAAqB1C,GAArB,EAA6B;EACjC,OAAOA,GAAG,IAAK,SAAaA,IAAAA,GAAb,IAAoB,WAAeA,IAAAA,GAAnC,IAA0C,aAAA,IAAiBA,GAA1E,CAAA;AACD;;ACtDK,SAAU2C,QAAV,CAAmBpC,IAAnB,EAAgC;AAClC,EAAA,OAAO,UAAUH,SAAV,EAA0BC,UAA1B,EAA4C;AAC/C,IAAA,IAAMuC,UAAU,GAAGrC,IAAI,IAAIF,UAA3B,CAAA;AAEAb,IAAAA,MAAM,CAAC6B,cAAP,CAAsBjB,SAAtB,EAAiCC,UAAjC,EAA6C;AACzCiB,MAAAA,GAAG,EAAE,YAAA;AACD,QAAA,OAAOgB,WAAW,CAAC,IAAD,EAAOM,UAAP,CAAX,CAA8BX,OAArC,CAAA;OAFqC;MAIzCV,GAAG,EAAE,UAAUN,KAAV,EAAoB;QACrBqB,WAAW,CAAC,IAAD,EAAOM,UAAP,EAAmB3B,KAAnB,CAAX,CAAqCgB,OAArC,GAA+ChB,KAA/C,CAAA;AACH,OAAA;KANL,CAAA,CAAA;;IAQA,IAAI2B,UAAU,KAAKvC,UAAnB,EAA+B;AAC3Bb,MAAAA,MAAM,CAAC6B,cAAP,CAAsBjB,SAAtB,EAAiCwC,UAAjC,EAA6C;AACzCtB,QAAAA,GAAG,EAAE,YAAA;AACD,UAAA,OAAOgB,WAAW,CAAC,IAAD,EAAOM,UAAP,CAAX,CAA8BX,OAArC,CAAA;AACH,SAAA;OAHL,CAAA,CAAA;AAKH,KAAA;GAjBL,CAAA;AAmBH;;ACnBK,SAAUY,uBAAV,CAAkCC,MAAlC,EAA6D;EAC/DA,MAAM,CAAC,WAAD,CAAN,GAAsB,UAAUvC,IAAV,EAAwBoB,QAAxB,EAAsD;IACxEW,WAAW,CAAC,IAAD,EAAO/B,IAAP,CAAX,CAAwBmB,SAAxB,CAAkCC,QAAlC,CAAA,CAAA;GADJ,CAAA;;EAGAmB,MAAM,CAAC,aAAD,CAAN,GAAwB,UAAUvC,IAAV,EAAyBoB,QAAzB,EAAwD;IAAxD,IAWvBoB,KAAA,GAAA,IAXuB,CAAA;;IACpB,IAAI,CAACxC,IAAL,EAAW;MACPjB,IAAI,CAAC8C,YAAY,CAAC,IAAD,CAAb,CAAJ,CAAyB9B,OAAzB,CAAiC,UAAC0C,YAAD,EAAa;QAC1CD,KAAI,CAAClB,WAAL,CAAiBmB,YAAjB,CAAA,CAAA;OADJ,CAAA,CAAA;AAGA,MAAA,OAAA;AACH,KAAA;;AACD,IAAA,IAAI,EAAEzC,IAAI,IAAI,IAAV,CAAJ,EAAqB;AACjB,MAAA,OAAA;AACH,KAAA;;IACD+B,WAAW,CAAC,IAAD,EAAO/B,IAAP,CAAX,CAAwBsB,WAAxB,CAAoCF,QAApC,CAAA,CAAA;GAVJ,CAAA;AAYH,CAAA;AAEK,SAAUsB,iBAAV,CAA4BC,WAA5B,EAA4C;AAC9C,EAAA,IAAM9C,SAAS,GAAG8C,WAAW,CAAC9C,SAA9B,CAAA;EAEAyC,uBAAuB,CAACzC,SAAD,CAAvB,CAAA;AACH;;ACPK,SAAU+C,QAAV,CACFC,KADE,EACgD;EAElD,IAAMxC,MAAM,GAAGX,UAAU,CAACmD,KAAD,CAAV,GAAoBA,KAAK,EAAzB,GAA8BA,KAA7C,CAAA;EACA,IAAMC,cAAc,GAAwB,EAA5C,CAAA;EAEA/D,IAAI,CAACsB,MAAD,CAAJ,CAAaN,OAAb,CAAqB,UAACC,IAAD,EAAU;AAC3B,IAAA,IAAMU,KAAK,GAAGL,MAAM,CAACL,IAAD,CAApB,CAAA;;AACA,IAAA,IAAImC,UAAU,CAACzB,KAAD,CAAd,EAAuB;AACnBuB,MAAAA,WAAW,CAACa,cAAD,EAAiB9C,IAAjB,EAAuBU,KAAvB,CAAX,CAAA;AACA0B,MAAAA,QAAQ,CAACpC,IAAD,CAAR,CAAe8C,cAAf,EAA+B9C,IAA/B,CAAA,CAAA;AACH,KAHD,MAGO;AACH8C,MAAAA,cAAc,CAAC9C,IAAD,CAAd,GAAuBU,KAAvB,CAAA;AACH,KAAA;GAPL,CAAA,CAAA;EAUA4B,uBAAuB,CAACQ,cAAD,CAAvB,CAAA;AACA,EAAA,OAAOA,cAAP,CAAA;AACH;;AC7BK,SAAUC,aAAV,CAMAC,OANA,EAMgE;;;AAElE,EAAA,SAASC,IAAT,GAAa;;;AACT,IAAA,OAAO,CAAAC,EAAA,GAAA,MAAAF,OAAO,CAACC,IAAR,MAAgB,IAAhB,IAAgB3C,EAAA,KAAA,KAAA,CAAhB,GAAgB,KAAA,CAAhB,GAAgBA,EAAA,CAAA6C,IAAA,CAAAH,OAAA,CAAhB,MAAgB,IAAhB,IAAgBE,EAAA,KAAA,KAAA,CAAhB,GAAgBA,EAAhB,GAAoB,EAA3B,CAAA;AACH,GAAA;;AAED,EAAA,IAAME,WAAW,GAAkB;AAAE1B,IAAAA,OAAO,EAAE,CAAA,CAAApB,EAAA,GAAA0C,OAAO,CAACK,OAAR,UAAA,iBAAA,SAAA,oBAAkBJ,IAAI,GAAtB,KAA6B,IAAA;GAA3E,CAAA;EACA,IAAIK,UAAU,GAAiB,IAA/B,CAAA;EAEA,OAAO;AACHC,IAAAA,KAAK,EAAL,YAAA;AACI,MAAA,IAAMC,IAAI,GAAGJ,WAAW,CAAC1B,OAAzB,CAAA;;AAEA,MAAA,IAAI4B,UAAJ,EAAgB;AACZ,QAAA,OAAOA,UAAP,CAAA;AACH,OAAA;;MACD,IAAIN,OAAO,CAACO,KAAZ,EAAmB;QACfD,UAAU,GAAGN,OAAO,CAACO,KAArB,CAAA;OADJ,MAEO,IAAIC,IAAJ,EAAU;AACb,QAAA,IAAMC,WAAS,GAAG5B,YAAY,CAAC2B,IAAD,CAA9B,CAAA;AAEAF,QAAAA,UAAU,GAAGvE,IAAI,CAAC0E,WAAD,CAAJ,CAAgBC,MAAhB,CAAuB,UAACC,IAAD,EAAOC,GAAP,EAAU;UAC1CD,IAAI,CAACC,GAAD,CAAJ,GAAYH,WAAS,CAACG,GAAD,CAAT,CAAelC,OAA3B,CAAA;AACA,UAAA,OAAOiC,IAAP,CAAA;SAFS,EAGV,EAHU,CAAb,CAAA;AAIH,OAAA;;MACD,OAAOL,UAAU,IAAI,EAArB,CAAA;KAjBD;AAmBHxB,IAAAA,QAAQ,EAAA,YAAA;MACJ,OAAOsB,WAAW,CAAC1B,OAAnB,CAAA;KApBD;AAsBHmC,IAAAA,OAAO,EAAP,YAAA;;;AACIT,MAAAA,WAAW,CAAC1B,OAAZ,GAAsB,CAAA,CAAApB,EAAA,GAAA0C,OAAO,CAACa,OAAR,MAAkB,IAAlB,IAAkBvD,EAAA,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAkBA,EAAA,CAAA6C,IAAA,CAAAH,OAAA,EAAAC,IAAI,EAAJ,CAAlB,KAA6BG,WAAW,CAAC1B,OAA/D,CAAA;KAvBD;AAyBHoC,IAAAA,IAAI,EAAJ,YAAA;;;AACI,MAAA,CAAAxD,EAAA,GAAA0C,OAAO,CAACc,IAAR,MAAe,IAAf,IAAexD,EAAA,KAAA,KAAA,CAAf,GAAe,KAAA,CAAf,GAAeA,EAAA,CAAA6C,IAAA,CAAAH,OAAA,EAAAI,WAAW,CAAC1B,OAAZ,EAAsBuB,IAAI,EAA1B,CAAf,CAAA;KA1BD;AA4BHc,IAAAA,OAAO,EAAP,YAAA;;;AACI,MAAA,CAAAzD,EAAA,GAAA0C,OAAO,CAACe,OAAR,MAAkB,IAAlB,IAAkBzD,EAAA,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAkBA,EAAA,CAAA6C,IAAA,CAAAH,OAAA,EAAAI,WAAW,CAAC1B,OAAZ,EAAsBuB,IAAI,EAA1B,CAAlB,CAAA;KA7BD;AA+BHrD,IAAAA,OAAO,EAAP,YAAA;AACI,MAAA,OAAO4B,mBAAmB,CAAgB4B,WAAhB,EAA6BJ,OAAO,CAACpD,OAArC,CAA1B,CAAA;KAhCD;AAkCHyB,IAAAA,EAAE,EAAF,UAAG2C,SAAH,EAAsBC,QAAtB,EAA+D;;;AAC3D,MAAA,CAAA3D,EAAA,GAAA0C,OAAO,CAAC3B,EAAR,MAAU,IAAV,IAAUf,EAAA,KAAA,KAAA,CAAV,GAAU,KAAA,CAAV,GAAUA,EAAA,CAAA6C,IAAA,CAAAH,OAAA,EAAGI,WAAW,CAAC1B,OAAf,EAAyBsC,SAAzB,EAA6CC,QAA7C,CAAV,CAAA;KAnCD;AAqCH1C,IAAAA,GAAG,EAAH,UAAIyC,SAAJ,EAAuBC,QAAvB,EAAgE;;;AAC5D,MAAA,CAAA3D,EAAA,GAAA0C,OAAO,CAACzB,GAAR,MAAW,IAAX,IAAWjB,EAAA,KAAA,KAAA,CAAX,GAAW,KAAA,CAAX,GAAWA,EAAA,CAAA6C,IAAA,CAAAH,OAAA,EAAGI,WAAW,CAAC1B,OAAf,EAAyBsC,SAAzB,EAA6CC,QAA7C,CAAX,CAAA;AACH,KAAA;GAvCL,CAAA;AAyCH;;;;;;;;;;;;;;;;;;;;;;;AC/DD;;;;AAIG;;;;"}